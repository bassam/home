#!/bin/bash

# Copy a unique shell rc file up to a remote host for running a different shell
# environment with additional user-oriented features.
function mssh()
{
    local norootme sh host port scp ssh hostdir scriptpath srcfn dstfn rc

    if [ "$1" = '-norootme' ]; then
        shift
        norootme='NOROOTME=1'
    fi

    if [ "$1" = '-sh' ]; then
        shift; sh=$1; shift
    else
        sh=bash
    fi

    if [ $# -ne 1 -a $# -ne 2 ]; then
        echo "usage: mssh [-norootme] [-sh <shell>] <host> [<port>]" 1>&2
        return 1
    fi

    host=$1
    port=$2

    [ "$host" = 'test' ] && host='test.symform.com'

    scp="scp"
    ssh="ssh"

    if [ $# -gt 1 ]; then
        scp="$scp -P $port"
        ssh="$ssh -p $port"
    fi

    scriptpath=$( cd $(dirname $0) ; pwd -P )
    hostdir="/tmp/mssh/$host"
    mkdir -p "$hostdir"

    srcfn="${scriptpath}/mssh_bashrc"
    dstfn="${hostdir}/.mssh_bashrc.$USER"
    if [ ! -f "$dstfn" ] || [ `stat -f %Y "$srcfn"` -gt `stat -f %Y "$dstfn"` ]; then
        echo "Updating $(basename "$dstfn") on ${host} ..."
        cp -f "$srcfn" "$dstfn"
        if ! $scp -q "$dstfn" ${host}:; then
            rm -rf "$hostdir"
            return $?
        fi
    fi

    echo "Connecting to ${host} ..."

    local symname="$(echo "$host" | sed 's/^[^@]*@//')"
    retitle "$symname"
    $ssh -A -t $host $norootme SYMNAME="$symname" SYMUSER=$USER \
        exec $sh --rcfile .mssh_bashrc.$USER -i
    rc=$?
    retitle

    return $rc
}

mssh $*